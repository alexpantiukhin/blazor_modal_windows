@inherits BaseModalWindow

@inject ModalWindowService _service

@Content()

@code {
    protected override void OnInitialized()
    {
        _service.OnShow += ShowModal;
        _service.OnClose += CloseModal;
    }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (IsVisible == false)
            await _service.ClosedCall();
        else
            await _service.ShowedCall();
    }

    public Task ShowModal(RenderFragment content, string containerClass)
    {
        ChildContent = content;
        IsVisible = true;
        ContainerClass = containerClass;

        return InvokeAsync(() =>
        {
            StateHasChanged();
        });
    }

    public void Dispose()
    {
        _service.OnShow -= ShowModal;
        _service.OnClose -= CloseModal;
    }
}
